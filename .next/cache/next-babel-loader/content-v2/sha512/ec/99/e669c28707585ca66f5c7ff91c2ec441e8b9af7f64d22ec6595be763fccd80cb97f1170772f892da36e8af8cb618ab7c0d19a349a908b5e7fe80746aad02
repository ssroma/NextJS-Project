{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergioroma/Desktop/Programming/React/theCompleteGuide/nextjsSection/starting-project/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\"; //import Link from \"next/link\";\n//import classes from \"./index.module.css\";\n//import Card from \"../../components/ui/Card\";\n//import MeetupDetailItem from \"../../components/meetups/MeetupDetailItem\";\n\nfunction MeetupDetails(props) {\n  //const {title, image, address, description} = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: title + \" Meeting Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetailItem, {\n      meetupData: props.meetupData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/sergioroma/Desktop/Programming/React/theCompleteGuide/nextjsSection/starting-project/pages/[meetupId]/index.js"],"names":["Fragment","Head","MeetupDetails","props","title","description","meetupData"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;AACA;AACA;AACA;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQC,KAAK,GAAG;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,gBAAD;AAAkB,MAAA,UAAU,EAAEF,KAAK,CAACG;AAApC;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;KA/BQJ,a;;AAyET,eAAeA,aAAf","sourcesContent":["import { Fragment } from \"react\";\nimport Head from \"next/head\";\n//import Link from \"next/link\";\n//import classes from \"./index.module.css\";\n//import Card from \"../../components/ui/Card\";\n//import MeetupDetailItem from \"../../components/meetups/MeetupDetailItem\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  //const {title, image, address, description} = props.meetupData;\n\n  return (\n    <Fragment>\n      <Head>\n        <title>{title + \" Meeting Up\"}</title>\n        <meta name=\"description\" content={description}  />\n      </Head> \n      <MeetupDetailItem meetupData={props.meetupData} />\n      {/* <div className={classes.detaislContainer}>\n        <Card>\n            <div className={classes.image}>\n              <img src={image} alt={title} />\n            </div>\n            <div className={classes.content}>\n              <h3>{title}</h3>\n              <address>{address}</address>\n            </div>\n            <div className={classes.content}>\n              <label htmlFor=\"textArea\">Descriptions: </label>\n              <textarea rows=\"5\" cols=\"10\" readOnly id=\"textArea\" defaultValue={description}>\n              </textarea>\n            </div>\n            <div className={classes.actions}>\n              <Link className={classes.link} href={\"/\"}>Back to Home Page</Link>\n            </div>\n          </Card>\n        </div> */}\n    </Fragment>\n  )\n}\n\nexport async function getStaticPaths() {\n  const uri = \"mongodb+srv://meetUp:264859Santos!@cluster0.ahsjr.mongodb.net/meetups?retryWrites=true&w=majority\";\n\n  const client = await MongoClient.connect(uri);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n  client.close();\n \n  return {\n    paths: meetups.map( meetup => ({params: {meetupId: meetup._id.toString() }})),\n    fallback: true\n  }\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const uri = \"mongodb+srv://meetUp:264859Santos!@cluster0.ahsjr.mongodb.net/meetups?retryWrites=true&w=majority\";\n\n  const client = await MongoClient.connect(uri);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n\n  const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n  client.close();\n\n  return {\n    props: {\n      meetupData: {\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n        id: selectedMeetup._id.toString()\n      }\n    }\n  }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}