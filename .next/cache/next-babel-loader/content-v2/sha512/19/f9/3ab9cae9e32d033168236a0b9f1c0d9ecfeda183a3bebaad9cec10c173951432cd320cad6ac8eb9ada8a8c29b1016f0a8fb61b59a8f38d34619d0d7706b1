{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport classes from \"./index.module.css\";\nimport Card from \"../../components/ui/Card\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  const {\n    title,\n    image,\n    address,\n    description\n  } = props.meetupData;\n  return /*#__PURE__*/_jsxs(Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: title + \" Meeting Up\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: description\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: classes.detaislContainer,\n      children: /*#__PURE__*/_jsxs(Card, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.image,\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: image,\n            alt: title\n          })\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsx(\"h3\", {\n            children: title\n          }), /*#__PURE__*/_jsx(\"address\", {\n            children: address\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"textArea\",\n            children: \"Descriptions: \"\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            rows: \"5\",\n            cols: \"10\",\n            readOnly: true,\n            id: \"textArea\",\n            defaultValue: description\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsx(Link, {\n            className: classes.link,\n            href: \"/\",\n            children: \"Back to Home Page\"\n          })\n        })]\n      })\n    })]\n  });\n}\n\nexport async function getStaticPaths() {\n  const uri = \"mongodb+srv://meetUp:264859Santos!@cluster0.ahsjr.mongodb.net/meetups?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: true\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const uri = \"mongodb+srv://meetUp:264859Santos!@cluster0.ahsjr.mongodb.net/meetups?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n        id: selectedMeetup._id.toString()\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":null,"metadata":{},"sourceType":"module"}