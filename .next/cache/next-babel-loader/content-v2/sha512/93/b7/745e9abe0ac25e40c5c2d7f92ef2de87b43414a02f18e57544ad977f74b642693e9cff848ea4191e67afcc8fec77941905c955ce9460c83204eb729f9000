{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergioroma/Desktop/Programming/React/theCompleteGuide/nextjsSection/starting-project/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\"; //import { useRouter } from \"next/Router\";\n\nimport Link from \"next/link\";\nimport classes from \"./index.module.css\";\nimport Card from \"../../components/ui/Card\";\nimport { MongoClient } from \"mongodb\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"JS Development\",\n  image: \"https://image.shutterstock.com/image-photo/top-view-photography-city-buildings-260nw-770705728.jpg\",\n  address: \"17th avenue 3498, New York - 234-453\",\n  description: \"We will discuse about the news features.\"\n}, {\n  id: \"m2\",\n  title: \"React for Best\",\n  image: \"https://image.shutterstock.com/image-photo/top-view-photography-city-buildings-260nw-770705728.jpg\",\n  address: \"34th avenue 3498, New Jersae - 344-663\",\n  description: \"We will discuse about the news features.\"\n}];\n\nfunction MeetupDetails(props) {\n  console.log(props.meetupData);\n  const {\n    title,\n    image,\n    address,\n    description\n  } = props; //extractItem(id);\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.detaislContainer,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.image,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image,\n            alt: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"textArea\",\n            children: \"Descriptions: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: \"5\",\n            cols: \"10\",\n            readOnly: true,\n            id: \"textArea\",\n            defaultValue: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            className: classes.link,\n            href: \"/\",\n            children: \"Back to Home Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n} // This function is needed in dimamic pages to create all possibles paths to the page, Its only used em using getStaticProps.\n\n\nexport async function getStaticPaths() {\n  const uri = \"mongodb+srv://meetUp:264859Santos!@cluster0.ahsjr.mongodb.net/meetups?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close(); // const idPath = DUMMY_MEETUPS.map(item => { \n  //   return {params: {meetupId: item.id}}\n  // });\n\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: true\n  };\n} // getStaticProps preload all content to be used by the page \n// and optimise the SEO content\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const uri = \"mongodb+srv://meetUp:264859Santos!@cluster0.ahsjr.mongodb.net/meetups?retryWrites=true&w=majority\";\n  const client = await MongoClient.connect(uri);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({}, {\n    _id: meetupId\n  });\n  client.close(); // const extractItem = (id) => {\n  //   const detail = meetups.filter( meetup => meetup._id.toString() === id );\n  //   return {\n  //     title: detail[0].title,\n  //     address: detail[0].address,\n  //     image: detail[0].image,\n  //     description: detail[0].description,\n  //     id: detail[0]._id.toString()\n  //   }\n  // }\n  // const meetUp = extractItem(id);\n\n  console.log(selectedMeetup);\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/sergioroma/Desktop/Programming/React/theCompleteGuide/nextjsSection/starting-project/pages/[meetupId]/index.js"],"names":["Fragment","Link","classes","Card","MongoClient","DUMMY_MEETUPS","id","title","image","address","description","MeetupDetails","props","console","log","meetupData","detaislContainer","content","actions","link","getStaticPaths","uri","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","paths","map","meetup","params","meetupId","toString","fallback","getStaticProps","context","selectedMeetup","findOne"],"mappings":"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","sourcesContent":["import { Fragment } from \"react\";\n//import { useRouter } from \"next/Router\";\nimport Link from \"next/link\";\nimport classes from \"./index.module.css\";\nimport Card from \"../../components/ui/Card\";\nimport { MongoClient } from \"mongodb\";\n\nconst DUMMY_MEETUPS = [\n  {\n    id: \"m1\",\n    title: \"JS Development\",\n    image: \"https://image.shutterstock.com/image-photo/top-view-photography-city-buildings-260nw-770705728.jpg\",\n    address: \"17th avenue 3498, New York - 234-453\",\n    description: \"We will discuse about the news features.\"\n  },\n\n  {\n    id: \"m2\",\n    title: \"React for Best\",\n    image: \"https://image.shutterstock.com/image-photo/top-view-photography-city-buildings-260nw-770705728.jpg\",\n    address: \"34th avenue 3498, New Jersae - 344-663\",\n    description: \"We will discuse about the news features.\"\n  }\n]\n\n\n\nfunction MeetupDetails(props) {\n\n  console.log(props.meetupData);\n  const {title, image, address, description} = props //extractItem(id);\n\n  return <Fragment>\n    <div className={classes.detaislContainer}>\n      <Card>\n          <div className={classes.image}>\n            <img src={image} alt={title} />\n          </div>\n          <div className={classes.content}>\n            <h3>{title}</h3>\n            <address>{address}</address>\n          </div>\n          <div className={classes.content}>\n            <label htmlFor=\"textArea\">Descriptions: </label>\n            <textarea rows=\"5\" cols=\"10\" readOnly id=\"textArea\" defaultValue={description}>\n            </textarea>\n          </div>\n          <div className={classes.actions}>\n            <Link className={classes.link} href={\"/\"}>Back to Home Page</Link>\n          </div>\n        </Card>\n      </div>\n  </Fragment>\n}\n\n// This function is needed in dimamic pages to create all possibles paths to the page, Its only used em using getStaticProps.\nexport async function getStaticPaths() {\n  const uri = \"mongodb+srv://meetUp:264859Santos!@cluster0.ahsjr.mongodb.net/meetups?retryWrites=true&w=majority\";\n\n  const client = await MongoClient.connect(uri);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n  client.close();\n  // const idPath = DUMMY_MEETUPS.map(item => { \n  //   return {params: {meetupId: item.id}}\n  // });\n\n  return {\n    paths: meetups.map( meetup => ({params: {meetupId: meetup._id.toString() }})),\n    fallback: true\n  }\n}\n\n// getStaticProps preload all content to be used by the page \n// and optimise the SEO content\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const uri = \"mongodb+srv://meetUp:264859Santos!@cluster0.ahsjr.mongodb.net/meetups?retryWrites=true&w=majority\";\n\n  const client = await MongoClient.connect(uri);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n\n  const selectedMeetup = await meetupsCollection.findOne({}, { _id: meetupId });\n  client.close();\n  // const extractItem = (id) => {\n  //   const detail = meetups.filter( meetup => meetup._id.toString() === id );\n  //   return {\n  //     title: detail[0].title,\n  //     address: detail[0].address,\n  //     image: detail[0].image,\n  //     description: detail[0].description,\n  //     id: detail[0]._id.toString()\n  //   }\n  // }\n\n  // const meetUp = extractItem(id);\n  console.log(selectedMeetup);\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}