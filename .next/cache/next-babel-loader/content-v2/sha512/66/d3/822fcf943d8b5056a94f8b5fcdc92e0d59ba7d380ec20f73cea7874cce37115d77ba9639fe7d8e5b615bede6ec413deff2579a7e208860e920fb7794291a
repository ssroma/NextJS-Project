{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergioroma/Desktop/Programming/React/theCompleteGuide/nextjsSection/starting-project/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetailItem from \"../../components/meetups/MeetupDetailItem\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetailItem, {\n      meetupData: props.meetupData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/sergioroma/Desktop/Programming/React/theCompleteGuide/nextjsSection/starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetailItem","MeetupDetails","props","meetupData"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,gBAAP,MAA6B,2CAA7B;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,gBAAD;AAAkB,MAAA,UAAU,EAAEA,KAAK,CAACC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQF,a;;AAgDT,eAAeA,aAAf","sourcesContent":["import { Fragment } from \"react\";\nimport MeetupDetailItem from \"../../components/meetups/MeetupDetailItem\";\nimport { MongoClient, ObjectId } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return (\n    <Fragment>\n      <MeetupDetailItem meetupData={props.meetupData} />\n    </Fragment>\n  )\n}\n\nexport async function getStaticPaths() {\n  const uri = \"mongodb+srv://meetUp:264859Santos!@cluster0.ahsjr.mongodb.net/meetups?retryWrites=true&w=majority\";\n\n  const client = await MongoClient.connect(uri);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n  client.close();\n \n  return {\n    paths: meetups.map( meetup => ({params: {meetupId: meetup._id.toString() }})),\n    fallback: true\n  }\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const uri = \"mongodb+srv://meetUp:264859Santos!@cluster0.ahsjr.mongodb.net/meetups?retryWrites=true&w=majority\";\n\n  const client = await MongoClient.connect(uri);\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n\n  const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\n  client.close();\n\n  return {\n    props: {\n      meetupData: {\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n        id: selectedMeetup._id.toString()\n      }\n    }\n  }\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}